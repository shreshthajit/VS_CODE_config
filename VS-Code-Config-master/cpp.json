{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Default cpp formate": {
		"prefix": [
			"include",
			"default"
		],
		"body": [
			"/*\n\nAuthor : 5hifaT\n",
			"github:https://github.com/jspw\n",
			"https://stackoverflow.com/story/jspw \n\n",
			"*/\n\n",
			"#include<bits/stdc++.h>",
			"using namespace std;",
			"#define ll long long",
			"\n",
			"//Sort array in discending order (n to 1)",
			"bool decSort(ll a,ll b){",
			"	return a>b;",
			"}",
			"\n",
			
			"//find the maximum element of a array",
			"ll max_of_array(ll a[],ll n){",
			"	ll mx=a[0];",
			"	for(ll i=0;i<n;i++){",
			"		if(a[i]>mx) mx = a[i];",
			"	}",
			"	return mx;",
			"}",
			
			"\n",
			
			"//find the minimum element of a array",
			"ll min_of_array(ll a[],ll n){",
			"	ll mn=a[0];",
			"	for(ll i=0;i<n;i++){",
			"		if(a[i]<mn) mn = a[i];",
			"	}",
			"	return mn;",
			"}",
			"\n",
			"int main(){\n",
			"	ios_base::sync_with_stdio(false);",
			"	cin.tie(NULL);",
			"\n 	$1",
			"\n\n",
			"	return 0;",
			"}"
		
		],
		"description": "This is a c++ sniffpet",

		
	},
	"for loop":{
		"prefix": "forl",
		"body": ["for($1 $2 = $3 ; $2 < $4 ; $2++)","{","	${0:/* code */}","}"],
		"description": "For Loop"
	}
}
